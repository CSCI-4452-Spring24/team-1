name: CI/CD Workflow for Minecraft Platform

on:
  push:
    branches:
      - main  

jobs:
  build-flask-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12.2'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run tests
        run: python -m unittest test_flask.py
      
      - name: Build and tag Docker image
        run: |
          docker build -t my-gameserver-app:latest .
          # If you're using Docker Hub, tag with your username
          # docker tag my-gameserver-app:latest username/my-gameserver-app:latest

      # - name: Log in to Docker Registry
      #   uses: docker/login-action@v1
      #   with:
      #     # Replace
      #     username: ${{ secrets.REGISTRY_USERNAME }}
      #     password: ${{ secrets.REGISTRY_PASSWORD }}

      # - name: Push Docker image to Registry
      #   run: |
      #     # If you're using Docker Hub, push with your username
      #     # docker push username/my-gameserver-app:latest
      #     docker push my-gameserver-app:latest

  terraform-deploy:
    needs: build-flask-app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-west-1'

  manage-k8s-resources:
    needs: terraform-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl
          kubectl version --client
          
      - name: Configure kubectl
        run: |
          aws eks --region your-region update-kubeconfig --name your-cluster-name

      - name: Apply Kubernetes configurations
        run: |
          echo "Applying Kubernetes configurations..."
          python k8s_util.py apply
